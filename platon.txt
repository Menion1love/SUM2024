Одной из основных тем младшей группы была задача по построению платоновых фигур.
Правильные многогранники (или плотоновые фигуры) называют именно так, потому что их стороны являются правильными многоугольниками. 
Какова же связь платоном
В попытке объяснить природу всего сущего Платон посчитал пять правильных многогранников первоосновами для строения каждой из стихий:
- огонь - соотносился с тетраэдром;
- воздух – соотносился с октаэдром;
- земля – соотносилась с гексаэдром;
- вода – с икосаэдром;
- а додекаэдр - соответствовал Вселенной.                                                                                                                                 
Одно из самых удивительных свойств данных фигур - их все можно вписать в единичную окружность.
Именно благодаря этому можно легко найти их вершин и построить данные фигуры.
Самым легким для построения является куб - далее идет октаэдр - его вершины можно получить, просто взяв середины граней куба. тетраэдр строится также достаточно просто и примитивно.
Следующие фигуры можно построить также с помощью куба, но существует другой, более простой способ. Икосаэдр можно построить, используя единичную окружность, рассматривая его по частям. 
Вершины додекаэдра можно найти, вычислив среднее арифмитическое координат вершин, содержащих грани икосаэдра.


Мой финальный проект заключался в создании полноэкранной браузерной игры, написав систему 2д рендера с нулю. 
В первую очередь мне было нужно создать систему рендеринга. Использовав особенности языков js css и html я придумал идею, заключающуюся в наложении канвасов друг на друга.
Канвас - это холст браузерной страницы, на который можно выводить изображения, а также рисовать попиксельно. Я создал систему иерархии канвасов - первой рисовалась локации без какого либо окружения.
Использовался контекст webgl, позволяющий загрузить текстуру и просто двигать текстурные координаты, создавая иллюзию движения. В центр экрана накладывался персонаж, а далее уже накладывалось окружение,
тем самым позволяя создать эффект 1.5д для окружения. Далее возникла идея о создании коллизий и ивентов - взять исходную карту и отметить на ней области, куда персонаж не мог попасть,
в программе проверяется - если слдующий пиксель по данному направлению заблокирован, то персонаж не могжет пойти в эту сторону. Система ивентов реализована также.
Закончив систему рендера оставалось создать лишь краисове окружение и добавить некий сюжет, для создания атмосферы. Были релизованы системы инвентаря, магазина и голода.
Я считаю, что все основные задачи были выполнены удачно, но есть множество доработок, которые можно добавить в проект, к примеру система стрельбы или система врагов. 	
